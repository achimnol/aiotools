[project]
name = "aiotools"
dynamic = ["version"]
requires-python = ">=3.11"
license = "MIT"
authors = [
    {name = "Joongi Kim", email = "me@daybreaker.info"},
]
description = "Idiomatic asyncio utilities"
readme = "README.md"
keywords = ["asyncio"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Framework :: AsyncIO",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development",
]

[project.urls]
Documentation = "https://aiotools.readthedocs.io"
Tracker = "https://github.com/achimnol/aiotools/issues"
Source = "https://github.com/achimnol/aiotools"
"Code Coverage" = "https://codecov.io/github/achimnol/aiotools"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

[tool.towncrier]
package = "aiotools"
package_dir = "src"
name = "aiotools"
filename = "CHANGES.md"
directory = "changes/"
template = "changes/template.md"
start_string = "<!-- towncrier release notes start -->\n"
title_format = "{version} ({project_date})"
issue_format = "([#{issue}](https://github.com/achimnol/aiotools/issues/{issue}))"
underlines = ["-", "", ""]

[[tool.towncrier.type]]
    directory = "breaking"
    name = "Breaking Changes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "feature"
    name = "Features"
    showcontent = true

[[tool.towncrier.type]]
    directory = "deprecation"
    name = "Deprecations"
    showcontent = true

[[tool.towncrier.type]]
    directory = "fix"
    name = "Fixes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "doc"
    name = "Documentation Changes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "misc"
    name = "Miscellaneous"
    showcontent = true

[tool.ruff]
line-length = 88
src = ["src", "tests", "examples"]
target-version = "py311"
preview = true

[tool.ruff.lint]
ignore = ["E203","E731","E501"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    # "C",  # flake8-comprehensions
    # "B",  # flake8-bugbear
]

[tool.ruff.lint.isort]
known-first-party = ["aiotools"]
known-local-folder = ["src"]
split-on-trailing-comma = true

[tool.pytest]
testpaths = ["tests"]

[tool.mypy]
mypy_path = ["src", "tests", "examples"]
ignore_missing_imports = true
python_version = "3.14"

[tool.black]
line-length = 88
preview = true

[tool.pyright]
include = ["src"]
typeCheckingMode = "strict"
executionEnvironments = [
    { root = "tests", reportPrivateUsage = false },
    { root = "src" }
]

[dependency-groups]
dev = [
    "coverage>=7.10.7",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pystack>=1.5.1 ; sys_platform == 'linux'",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.3",
    "towncrier>=25.8.0",
    "twine>=6.2.0",
]
docs = [
    "sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
]
example = [
    "pyzmq>=27.1.0",
]
